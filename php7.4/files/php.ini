; Please use ZZ_local.ini to override values

; Maximum allowed size for uploaded files.
upload_max_filesize = 100M

; Maximum number of files that can be uploaded via a single request
max_file_uploads = 50

; Maximum size of POST data that PHP will accept.
post_max_size = 100M

; Maximum execution time of each script, in seconds
max_execution_time = 600

; Maximum amount of time each script may spend parsing request data
max_input_time = 600

; How many GET/POST/COOKIE input variables may be accepted
max_input_vars = 1500

; Maximum amount of memory a script may consume (128MB)
memory_limit = 512M

; This directive informs PHP of which errors, warnings and notices you would like
; it to take action for. The recommended way of setting values for this
; directive is through the use of the error level constants and bitwise
; operators. The error level constants are below here for convenience as well as
; some common settings and their meanings.
; Common Values:
;   E_ALL (Show all errors, warnings and notices including coding standards.)
;   E_ALL & ~E_NOTICE  (Show all errors, except for notices)
;   E_ALL & ~E_NOTICE & ~E_STRICT  (Show all errors, except for notices and coding standards warnings.)
;   E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR  (Show only errors)
; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
; Development Value: E_ALL
; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
; http://php.net/error-reporting
error_reporting = E_ALL

; This directive controls whether or not and where PHP will output errors,
; notices and warnings too. Error output is very useful during development, but
; it could be very dangerous in production environments. Depending on the code
; which is triggering the error, sensitive information could potentially leak
; out of your application such as database usernames and passwords or worse.
; It's recommended that errors be logged on production servers rather than
; having the errors sent to STDOUT.
; Possible Values:
;   Off = Do not display any errors
;   stderr = Display errors to STDERR (affects only CGI/CLI binaries!)
;   On or stdout = Display errors to STDOUT
; Default Value: On
; Development Value: On
; Production Value: Off
; http://php.net/display-errors
display_errors = On

; We use mstmp fo relaying mails to mail.dpool.net
sendmail_path = /usr/bin/msmtp -t

[Date]
; Defines the default timezone used by the date functions
; http://php.net/date.timezone
date.timezone = Europe/Berlin

[XDebug]
xdebug.remote_enable = 1

xdebug.remote_port = 9000

xdebug.profiler_enable = 0

xdebug.profiler_enable_trigger = 1

xdebug.idekey = dpool

xdebug.remote_connect_back = 0

xdebug.max_nesting_level = 400

[opcache]
; Determines if Zend OPCache is enabled (default 0)
opcache.enable = On

; Determines if Zend OPCache is enabled for the CLI version of PHP (default 0)
opcache.enable_cli = Off

; The OPcache shared memory storage size. (default 64)
opcache.memory_consumption = 256

; The amount of memory for interned strings in Mbytes. (default 4)
opcache.interned_strings_buffer = 8

; The maximum number of keys (scripts) in the OPcache hash table.
; Only numbers between 200 and 100000 are allowed. (default 200)
opcache.max_accelerated_files = 50000

; When disabled, you must reset the OPcache manually or restart the
; webserver for changes to the filesystem to take effect. (default 1)
opcache.validate_timestamps = On

; How often (in seconds) to check file timestamps for changes to the shared
; memory storage allocation. ("1" means validate once per second, but only
; once per request. "0" means always validate) (default 2)
opcache.revalidate_freq = 0

; If disabled, all PHPDoc comments are dropped from the code to reduce the
; size of the optimized code. (default 1)
opcache.save_comments = 1
